@namespace AntDesign.Pro.Template.Pages.Account.Center

<AntList TItem="ListItemDataType"
         Class="filterCardList"
         Grid="_listGridType"
         DataSource="List">
    <ListItem NoFlex Grid="_listGridType">
        <Card Bordered
              Hoverable
              BodyStyle="padding-bottom: 20px;"
              Actions="Actions">
            <CardMeta>
                <AvatarTemplate>
                    <Avatar Size="small" Src="@context.Avatar" />
                </AvatarTemplate>
                <TitleTemplate>@context.Title</TitleTemplate>
            </CardMeta>
            <div class="cardItemContent">
                <div class="cardInfo">
                    <div>
                        <p>活跃用户</p>
                        <p>@FormatWan(context.ActiveUser)</p>
                    </div>
                    <div>
                        <p>新增用户</p>
                        <p>@context.NewUser.ToString("0,0")</p>
                    </div>
                </div>
            </div>
        </Card>
    </ListItem>
</AntList>

@code
{

    private static RenderFragment<(ForwardRef refBack, string type)> _icon => (data) =>@<Icon RefBack="@data.refBack" Type="@data.type" Theme="outline" />;

    private static RenderFragment<(string tooltipTitle, RenderFragment<(ForwardRef, string)> icon, string iconType)> _tooltipTemplate => (data) => __builder =>
    {
        __builder.OpenComponent<AntDesign.Tooltip>(0);
        __builder.AddAttribute(1, "Title",
            Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<OneOf.OneOf<System.String, RenderFragment, MarkupString>>(data.tooltipTitle));
        __builder.AddAttribute(2, "Unbound", (RenderFragment<ForwardRef>)((context) =>
            data.icon((context, data.iconType)) ));
            __builder.CloseComponent();
    };

    private static readonly IList<RenderFragment> Actions = new List<RenderFragment>
    {
        _tooltipTemplate(("下载", _icon , "download")),
        _tooltipTemplate(("编辑", _icon , "edit")),
        _tooltipTemplate(("分享", _icon , "share-alt")),
        @<Dropdown><Icon Type="ellipsis" Theme="outline" /></Dropdown>        
    };

    private static RenderFragment FormatWan(int val)
    {
        if (val > 10000)
        {
            val = (int)Math.Floor((double)val / 10000);
        }

        return @<span>
            @val
            <span style="position: relative; top: -2px; font-size: 14px; font-style: normal; margin-left: 2px;">万</span>
        </span>;
 }
}
